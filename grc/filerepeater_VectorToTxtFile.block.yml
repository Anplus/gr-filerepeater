# auto-generated by grc.converter

id: filerepeater_VectorToTxtFile
label: Vector To Text File
category: '[Advanced File]'

parameters:
-   id: filename
    label: File
    dtype: file_open
-   id: vectorsize
    label: Vector Size
    dtype: int
    default: '1024'
    hide: ${ 'part' if vlen == 1 else 'none' }
-   id: frequency
    label: Frequency
    dtype: float
    default: freq
-   id: sampleRate
    label: Sample Rate
    dtype: float
    default: samp_rate
-   id: notes
    label: Notes
    dtype: string
-   id: updateRateSec
    label: Update Rate (sec)
    dtype: float
    default: '30.0'
-   id: append
    label: Append To File
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']
-   id: WriteTimeHeader
    label: Include Runtime
    dtype: enum
    options: ['True', 'False']
    option_labels: ['Yes', 'No']

inputs:
-   domain: stream
    dtype: float
    vlen: ${ vectorsize }

templates:
    imports: import filerepeater
    make: filerepeater.VectorToTxtFile(${filename}, ${vectorsize}, ${frequency}, ${sampleRate},
        ${notes}, ${append}, ${updateRateSec}, ${WriteTimeHeader})

documentation: |-
    This block will take a float vector and write it as a comma-separated entry in the specified text file.  Frequency, sample rate, and any desired notes will be added before the first sample.  An optional runtime header can be added before each row in append mode to track how far into a sequence the specific vector is.

file_format: 1
