# auto-generated by grc.converter

id: filerepeater_flowsync
label: Flow Input Synchronizer
category: '[Advanced File]'

parameters:
-   id: type
    label: Output Type
    dtype: enum
    options: [complex, float, int, short, byte]
    option_attributes:
        size: [gr.sizeof_gr_complex, gr.sizeof_float, gr.sizeof_int, gr.sizeof_short,
            gr.sizeof_char]
    hide: part
-   id: nconnections
    label: Number of I/O Paths
    dtype: int
    default: '2'
    hide: part

inputs:
-   domain: stream
    dtype: ${ type }
    multiplicity: ${ nconnections }

outputs:
-   domain: stream
    dtype: ${ type }
    multiplicity: ${ nconnections }

templates:
    imports: import filerepeater
    make: filerepeater.flowsync(${type.size},${nconnections})

documentation: "If you play two file sources (even if you create two file source blocks\
    \ but assign the same file to each), the data point \nflows will not be point-synchronized.\
    \  The Flow Input Synchronizer is a sync block that just puts all inputs and outputs\
    \ in step.  In other words \nif you plotted the same file from two different file\
    \ sources on a frequency sink using this block, the plots would now overlap/align\
    \ whereas they \ndo not without it."

file_format: 1
